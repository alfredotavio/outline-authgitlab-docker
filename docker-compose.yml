version: "3.5"

networks:
  network-wiki:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/24

volumes:
  redis-data:
  postgres-data:
  minio-data:


services:
  outline_redis:
    container_name: outline_redis
    image: redis
    networks:
      network-wiki:
        ipv4_address: 10.11.0.10
    restart: always
    volumes:
      - redis-data:/data

  outline_postgres:
    container_name: outline_postgres
    image: postgres:13
    networks:
      network-wiki:
        ipv4_address: 10.11.0.11
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  outline_minio:
    container_name: outline_minio
    image: minio/minio
    networks:
      network-wiki:
        ipv4_address: 10.11.0.12
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - TZ=America/Sao_Paulo
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.services.minio.loadbalancer.server.scheme=http"
      - "traefik.http.routers.minio.rule=Host(`${MINIO_URL_TRAEFIK}`)"
      - "traefik.http.routers.minio.tls.certresolver=leresolver"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minioadmin.service=minioadmin"
      - "traefik.http.services.minioadmin.loadbalancer.server.port=9000"
      - "traefik.http.services.minioadmin.loadbalancer.server.scheme=http"
      - "traefik.http.routers.minioadmin.rule=Host(`${MINIO_ADMIN_URL_TRAEFIK}`)"
      - "traefik.http.routers.minioadmin.tls.certresolver=leresolver"
      - "traefik.http.routers.minioadmin.entrypoints=websecure"
    command: "server /data --console-address :9001"

  outline_minio_mc:
    container_name: outline_minio_mc
    image: minio/mc
    networks:
      network-wiki:
        ipv4_address: 10.11.0.13
    environment:
      - TZ=America/Sao_Paulo
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add myminio http://10.11.0.12:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done; /usr/bin/mc mb myminio/${MINIO_BUCKET_NAME}; /usr/bin/mc policy set download myminio/${MINIO_BUCKET_NAME}; exit 0; "
    depends_on:
      - outline_minio

  outline:
    container_name: outline
    image: outlinewiki/outline:0.69.2
    networks:
      network-wiki:
        ipv4_address: 10.11.0.14
    restart: always
    ports:
      - "3000:3000"
    environment:
      - TZ=America/Sao_Paulo
      - PGSSLMODE=disable
      - SECRET_KEY=${SECRET_KEY}
      - UTILS_SECRET=${UTILS_SECRET}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@outline_postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://outline_redis:6379
      - URL=${WIKI_URL}
      - PORT=3000
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_REGION=us-east-1
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_S3_UPLOAD_BUCKET_URL=${MINIODATA_URL}
      - AWS_S3_ACCELERATE_URL=${MINIODATA_URL}
      - AWS_S3_UPLOAD_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - AWS_S3_FORCE_PATH_STYLE=false
      - AWS_S3_ACL=private
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
      - OIDC_AUTH_URI=${OIDC_AUTH_URI}
      - OIDC_TOKEN_URI=${OIDC_TOKEN_URI}
      - OIDC_USERINFO_URI=${OIDC_USERINFO_URI}
      - OIDC_USERNAME_CLAIM=username
      - OIDC_DISPLAY_NAME=GitLab
      - OIDC_SCOPES=openid email
      - FORCE_HTTPS=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.outline.service=outline"
      - "traefik.http.services.outline.loadbalancer.server.port=3000"
      - "traefik.http.services.outline.loadbalancer.server.scheme=http"
      - "traefik.http.routers.outline.rule=Host(`${WIKI_URL_TRAEFIK}`)"
      - "traefik.http.routers.outline.tls.certresolver=leresolver"
      - "traefik.http.routers.outline.entrypoints=websecure"
    command: sh -c "yarn db:migrate --env=production-ssl-disabled && yarn start --env=production-ssl-disabled"
    depends_on:
      - outline_postgres
      - outline_redis
      - outline_minio

  traefik:
    container_name: traefik
    image: traefik:latest
    networks:
      network-wiki:
        ipv4_address: 10.11.0.15
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt/acme.json:/acme.json"
    environment:
      - TZ=America/Sao_Paulo
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--api"
      - "--certificatesresolvers.leresolver.acme.email=${ACME_EMAIL_TRAEFIK}"
      - "--certificatesresolvers.leresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--serverstransport.insecureskipverify=true"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    depends_on:
      - outline_postgres
      - outline_redis
      - outline_minio
      - outline
