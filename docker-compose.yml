version: "3.5"

networks:
  network-wiki:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/24

volumes:
  redis-data:
  postgres-data:
  minio-data:
  traefik-certificates:


services:
  outline_redis:
    container_name: outline_redis
    image: redis:latest
    networks:
      network-wiki:
        ipv4_address: 10.11.0.10
    restart: always
    volumes:
      - redis-data:/data

  outline_postgres:
    container_name: outline_postgres
    image: postgres:latest
    networks:
      network-wiki:
        ipv4_address: 10.11.0.11
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  outline_minio:
    container_name: outline_minio
    image: minio/minio:latest
    networks:
      network-wiki:
        ipv4_address: 10.11.0.12
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - TZ=America/Sao_Paulo
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
      - MINIO_USER=${MINIO_USER}
      - MINIO_USER_PASSWORD=${MINIO_USER_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.middlewares=compresstraefik"
      - "traefik.http.routers.minio.tls.certresolver=letsencrypt"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.services.minio.loadbalancer.server.scheme=http"
      - "traefik.http.routers.minio.rule=Host(`${MINIO_URL_TRAEFIK}`)"
      - "traefik.http.services.minio.loadbalancer.passhostheader=true"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.http.routers.minioadmin.tls=true"
      - "traefik.http.routers.minioadmin.service=minioadmin"
      - "traefik.http.routers.minioadmin.entrypoints=websecure"
      - "traefik.http.routers.minioadmin.middlewares=compresstraefik"
      - "traefik.http.routers.minioadmin.tls.certresolver=letsencrypt"
      - "traefik.http.services.minioadmin.loadbalancer.server.port=9000"
      - "traefik.http.services.minioadmin.loadbalancer.server.scheme=http"
      - "traefik.http.routers.minioadmin.rule=Host(`${MINIO_ADMIN_URL_TRAEFIK}`)"
      - "traefik.http.services.minioadmin.loadbalancer.passhostheader=true"
    entrypoint: /bin/sh
    command:
      - -c
      - |
        minio server /data --console-address :9001 &
        sleep 20
        mc config host add minio http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
        mc mb minio/${MINIO_BUCKET_NAME}
        mc admin user add minio ${MINIO_USER} ${MINIO_USER_PASSWORD}
        cat > outline-policy.json <<-EOF
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetBucketLocation",
                  "s3:ListBucket",
                  "s3:ListBucketMultipartUploads"
                ],
                "Resource": [
                  "arn:aws:s3:::${MINIO_BUCKET_NAME}"
                ]
              },
              {
                "Action": [
                  "s3:AbortMultipartUpload",
                  "s3:DeleteObject",
                  "s3:GetObject",
                  "s3:ListMultipartUploadParts",
                  "s3:PutObject",
                  "s3:GetObject"
                ],
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3:::${MINIO_BUCKET_NAME}/*"
                ],
                "Sid": ""
              }
            ]
          }
        EOF
        cat > data-public.json <<-EOF
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                "AWS": [
                  "*"
                ]
              },
                "Action": [
                  "s3:GetObject",
                  "s3:ListMultipartUploadParts"
                ],
                "Resource": [
                  "arn:aws:s3:::data/public/*"
                ]
              }
            ]
          }
        EOF
        mc anonymous set-json data-public.json minio/${MINIO_BUCKET_NAME}
        mc admin policy create minio OutlineAppFullAccess outline-policy.json
        mc admin policy attach minio OutlineAppFullAccess --user=${MINIO_USER}
        tail -f /dev/null

  outline:
    container_name: outline
    image: outlinewiki/outline:0.74.0
    networks:
      network-wiki:
        ipv4_address: 10.11.0.14
    restart: always
    ports:
      - "3000:3000"
    environment:
      - TZ=America/Sao_Paulo
      - PGSSLMODE=disable
      - SECRET_KEY=${SECRET_KEY}
      - UTILS_SECRET=${UTILS_SECRET}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@outline_postgres:5432/${POSTGRES_DB}?sslmode=disable&connect_timeout=10
      - REDIS_URL=redis://outline_redis:6379
      - URL=${WIKI_URL}
      - PORT=3000
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_REGION=us-east-1
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_S3_UPLOAD_BUCKET_URL=${MINIODATA_URL}
      - AWS_S3_ACCELERATE_URL=${MINIODATA_URL}
      - AWS_S3_UPLOAD_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - AWS_S3_FORCE_PATH_STYLE=false
      - AWS_S3_ACL=private
      - AWS_S3_UPLOAD_MAX_SIZE=26214400
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
      - OIDC_AUTH_URI=${OIDC_AUTH_URI}
      - OIDC_TOKEN_URI=${OIDC_TOKEN_URI}
      - OIDC_USERINFO_URI=${OIDC_USERINFO_URI}
      - OIDC_USERNAME_CLAIM=username
      - OIDC_DISPLAY_NAME=GitLab
      - OIDC_SCOPES=openid email
      - FORCE_HTTPS=false
      - ENABLE_UPDATES=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.outline.tls=true"
      - "traefik.http.routers.outline.service=outline"
      - "traefik.http.routers.outline.entrypoints=websecure"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.http.routers.outline.middlewares=compresstraefik"
      - "traefik.http.routers.outline.tls.certresolver=letsencrypt"
      - "traefik.http.services.outline.loadbalancer.server.port=3000"
      - "traefik.http.services.outline.loadbalancer.server.scheme=http"
      - "traefik.http.routers.outline.rule=Host(`${WIKI_URL_TRAEFIK}`)"
      - "traefik.http.services.outline.loadbalancer.passhostheader=true"
    command: sh -c "yarn db:migrate --env=production-ssl-disabled && yarn start --env=production-ssl-disabled"
    depends_on:
      - outline_postgres
      - outline_redis
      - outline_minio

  traefik:
    container_name: traefik
    image: traefik:latest
    networks:
      network-wiki:
        ipv4_address: 10.11.0.15
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    environment:
      - TZ=America/Sao_Paulo
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL_TRAEFIK}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    depends_on:
      - outline_postgres
      - outline_redis
      - outline_minio
      - outline
